openapi: 3.0.0
info:
  title: Concert Waiting API
  version: 1.0.0
  description: 콘서트 예매에 관한 api

servers:
  - url: https://api.example.com
    description: api 명세 & mock api

paths:
  /waiting:
    post:
      summary: 유저 대기열 토큰 발급
      description: 유저 대기열 토큰 발급을 발급합니다.
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: number
          description: '유저 고유키'
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reservation/date:
    get:
      summary: 예약 가능한 날짜목록 조회
      description: 예약 가능한 날짜목록을 조회합니다.
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDateResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reservation/seat:
    get:
      summary: 예약 가능한 좌석 정보 조회
      description: 특정 날짜의 예약 가능한 좌석 번호를 조회합니다.
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
          description: 예약 가능한 날짜 (YYYY-MM-DD)
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableSeatResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /seat/reserve:
    post:
      summary: 좌석 예약 요청
      description: 좌석 예약 요청과 동시에 해당 좌석은 5분간 임시 배정됩니다. 만약 배정 시간 내 결제가 완료되지 않으면 임시 배정은 해제됩니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeatReservationRequest'
      responses:
        '201':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatReservationResponse'

  /user/charge:
    post:
      summary: 사용자의 잔액을 충전
      description: 사용자 잔액을 충전합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AmountChargeRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmountResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/amount:
    get:
      summary: 사용자 잔액 조회
      description: 사용자 잔액을 조회합니다.
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: number
          description: '유저 고유키'
      responses:
        '200':
          description: 잔액 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmountResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /payment:
    post:
      summary: 좌석 결제
      description: 좌석 결제 요청과 결제 내역을 생성합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: 잘못된 요청입니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          description: 고유키
        userId:
          type: integer
          description: 유저 고유키
        uuid:
          type: integer
          description: 대기 순서
        time:
          type: string
          description: 잔여 시간
      example:
        status: 'success'
        code: 200
        data:
          id: 1
          userId: 12
          uuid: 77
          time: '90분'

    AvailableDateResponse:
      type: object
      properties:
        status:
          type: string
          description: 서버메시지
        code:
          type: number
          description: 상태코드
        availableDates:
          type: array
          items:
            type: string
            format: date
            description: 예약 가능한 날짜
      example:
        status: 'success'
        code: 200
        availableDate:
          - '2024-10-12'
          - '2024-10-15'
          - '2024-10-20'

    AvailableSeatResponse:
      type: object
      properties:
        status:
          type: string
          description: 서버메시지
        code:
          type: number
          description: 상태코드
        seatNumber:
          type: array
          items:
            type: integer
            description: 좌석 번호 (1 ~ 50)
      example:
        status: 'success'
        code: 200
        seatNumber: [1, 5, 8, 12, 20, 23, 35, 40, 48]

    SeatReservationRequest:
      type: object
      properties:
        userId:
          type: integer
          description: 유저 고유키
        date:
          type: string
          format: date
          description: 예약 날짜
        seatNumber:
          type: number
          description: 좌석 번호
      required:
        - userID
        - date
        - seatId
      example:
        userId: 1
        date: '2024-10-11'
        seatNumber: 25

    SeatReservationResponse:
      type: object
      properties:
        status:
          type: string
          description: 성공 여부
        code:
          type: number
          description: 응답 코드
        data:
          type: object
          properties:
            id:
              type: integer
              description: 좌석 고유키
            seatNumber:
              type: number
              description: 좌석 번호
            expiredAt:
              type: string
              format: date-time
              description: 좌석 임시 배정 만료 시간(5분)
      example:
        status: 'success'
        code: 201
        data:
          id: 1
          seatNumber: 25
          expiredAt: '2024-10-11 22:14:10'

    AmountChargeRequest:
      type: object
      properties:
        userId:
          type: integer
          description: 유저 고유키
        amount:
          type: number
          description: 충전할 금액
      required:
        - userId
        - amount
      example:
        userId: 1
        amount: 10000

    AmountResponse:
      type: object
      properties:
        status:
          type: string
          description: 성공 여부
        code:
          type: integer
          description: 응답 코드
        data:
          type: object
          properties:
            userId:
              type: integer
              description: 유저 고유키
            currentAmount:
              type: number
              description: 현재 잔액
      example:
        status: 'success'
        code: 200
        data:
          userId: 1
          currentAmount: 15000

    PaymentRequest:
      type: object
      properties:
        userId:
          type: integer
          description: 유저 고유키
        seatId:
          type: integer
          description: 좌석 고유키
      required:
        - userId
        - seatNumber
      example:
        userId: 1
        seatNumber: 25
        amount: 5000

    PaymentResponse:
      type: object
      properties:
        status:
          type: string
          description: 성공 여부
        code:
          type: integer
          description: 응답 코드
        data:
          type: object
          properties:
            reservationId:
              type: integer
              description: 결제 고유키
            date:
              type: string
              description: 공연 날짜
            concertName:
              type: string
              description: 콘서트 이름
            seatNumber:
              type: integer
              description: 결제한 좌석 번호
            amount:
              type: number
              description: 결제한 금액
      example:
        status: 'success'
        code: 200
        data:
          reservationId: 1
          concertName: '뉴진스 콘서트'
          date: '2024-12-01'
          seatNumber: 25
          amount: 5000

    Error:
      type: object
      properties:
        status:
          type: string
          description: 서버메시지
        code:
          type: number
          description: 상태코드
        message:
          type: string
          description: Error message
      example:
        status: 'fail'
        code: 400
        message: 'request error'
